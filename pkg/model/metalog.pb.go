// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: pkg/model/metalog.proto

package model

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MetaLog_PatternKey int32

const (
	MetaLog_Unknown    MetaLog_PatternKey = 0
	MetaLog_Nop        MetaLog_PatternKey = 1
	MetaLog_LogFmt     MetaLog_PatternKey = 2
	MetaLog_Ecs        MetaLog_PatternKey = 3
	MetaLog_TsLevelMsg MetaLog_PatternKey = 4
	MetaLog_Envoy      MetaLog_PatternKey = 5
)

// Enum value maps for MetaLog_PatternKey.
var (
	MetaLog_PatternKey_name = map[int32]string{
		0: "Unknown",
		1: "Nop",
		2: "LogFmt",
		3: "Ecs",
		4: "TsLevelMsg",
		5: "Envoy",
	}
	MetaLog_PatternKey_value = map[string]int32{
		"Unknown":    0,
		"Nop":        1,
		"LogFmt":     2,
		"Ecs":        3,
		"TsLevelMsg": 4,
		"Envoy":      5,
	}
)

func (x MetaLog_PatternKey) Enum() *MetaLog_PatternKey {
	p := new(MetaLog_PatternKey)
	*p = x
	return p
}

func (x MetaLog_PatternKey) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MetaLog_PatternKey) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_model_metalog_proto_enumTypes[0].Descriptor()
}

func (MetaLog_PatternKey) Type() protoreflect.EnumType {
	return &file_pkg_model_metalog_proto_enumTypes[0]
}

func (x MetaLog_PatternKey) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MetaLog_PatternKey.Descriptor instead.
func (MetaLog_PatternKey) EnumDescriptor() ([]byte, []int) {
	return file_pkg_model_metalog_proto_rawDescGZIP(), []int{0, 0}
}

// Collects the metadata of a log entry from various formats
// This metadata is used for improve the pattern finding algorithm
type MetaLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Time of the log event shipment.
	// This ts will considered as log ts if the ts canot exctracted from the message
	FallbackTimestamp *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=fallbackTimestamp,proto3" json:"fallbackTimestamp,omitempty"`
	// This loglevel will be used if the loglevel can't be extracted from the ingested message
	FallbackLoglevel LogLevel `protobuf:"varint,2,opt,name=fallbackLoglevel,proto3,enum=model.LogLevel" json:"fallbackLoglevel,omitempty"`
	// a PatternKey for parsing the log content
	// An ingress channel have to decide the which pattern have to be choose
	PatternKey MetaLog_PatternKey `protobuf:"varint,3,opt,name=patternKey,proto3,enum=model.MetaLog_PatternKey" json:"patternKey,omitempty"`
	// Unique name of an application
	ApplicationName string `protobuf:"bytes,4,opt,name=applicationName,proto3" json:"applicationName,omitempty"`
	// Version of the running instance of the application
	ApplicationVersion string `protobuf:"bytes,5,opt,name=applicationVersion,proto3" json:"applicationVersion,omitempty"`
	// Labels captured from the log shipper source
	// This labels will be added to the final logs as log labels.
	Labels map[string]string `protobuf:"bytes,11,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// The log message
	Message string `protobuf:"bytes,12,opt,name=message,proto3" json:"message,omitempty"`
	// tags
	Tags []string `protobuf:"bytes,13,rep,name=tags,proto3" json:"tags,omitempty"`
	// If the log can't be unmarshalled from the ingress topic
	// If the log has validation errors
	// If something goes wrong in pattern matching
	ProcessError *ProcessError `protobuf:"bytes,14,opt,name=processError,proto3" json:"processError,omitempty"`
}

func (x *MetaLog) Reset() {
	*x = MetaLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_model_metalog_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaLog) ProtoMessage() {}

func (x *MetaLog) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_model_metalog_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaLog.ProtoReflect.Descriptor instead.
func (*MetaLog) Descriptor() ([]byte, []int) {
	return file_pkg_model_metalog_proto_rawDescGZIP(), []int{0}
}

func (x *MetaLog) GetFallbackTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.FallbackTimestamp
	}
	return nil
}

func (x *MetaLog) GetFallbackLoglevel() LogLevel {
	if x != nil {
		return x.FallbackLoglevel
	}
	return LogLevel_unknown
}

func (x *MetaLog) GetPatternKey() MetaLog_PatternKey {
	if x != nil {
		return x.PatternKey
	}
	return MetaLog_Unknown
}

func (x *MetaLog) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *MetaLog) GetApplicationVersion() string {
	if x != nil {
		return x.ApplicationVersion
	}
	return ""
}

func (x *MetaLog) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *MetaLog) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *MetaLog) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *MetaLog) GetProcessError() *ProcessError {
	if x != nil {
		return x.ProcessError
	}
	return nil
}

var File_pkg_model_metalog_proto protoreflect.FileDescriptor

var file_pkg_model_metalog_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x6d, 0x65, 0x74, 0x61,
	0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x13, 0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x65, 0x63, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd5, 0x04, 0x0a, 0x07, 0x4d, 0x65, 0x74, 0x61, 0x4c,
	0x6f, 0x67, 0x12, 0x48, 0x0a, 0x11, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x11, 0x66, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x3b, 0x0a, 0x10,
	0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x4c, 0x6f, 0x67, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4c,
	0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x10, 0x66, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x4c, 0x6f, 0x67, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x39, 0x0a, 0x0a, 0x70, 0x61, 0x74,
	0x74, 0x65, 0x72, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x4c, 0x6f, 0x67, 0x2e, 0x50, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x6e, 0x4b, 0x65, 0x79, 0x52, 0x0a, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x6e, 0x4b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e,
	0x0a, 0x12, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x32,
	0x0a, 0x06, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x4c, 0x6f, 0x67, 0x2e, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x12, 0x37, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x0c, 0x70, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x39, 0x0a, 0x0b, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x52, 0x0a, 0x0a, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x4b,
	0x65, 0x79, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12,
	0x07, 0x0a, 0x03, 0x4e, 0x6f, 0x70, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x6f, 0x67, 0x46,
	0x6d, 0x74, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x63, 0x73, 0x10, 0x03, 0x12, 0x0e, 0x0a,
	0x0a, 0x54, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4d, 0x73, 0x67, 0x10, 0x04, 0x12, 0x09, 0x0a,
	0x05, 0x45, 0x6e, 0x76, 0x6f, 0x79, 0x10, 0x05, 0x4a, 0x04, 0x08, 0x06, 0x10, 0x0b, 0x42, 0x56,
	0x0a, 0x25, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x75, 0x69,
	0x6b, 0x61, 0x73, 0x74, 0x34, 0x32, 0x2e, 0x6c, 0x6f, 0x67, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x48, 0x01, 0x50, 0x01, 0x5a, 0x29, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x75, 0x69, 0x6b, 0x61, 0x73, 0x74, 0x34,
	0x32, 0x2f, 0x6c, 0x6f, 0x67, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67,
	0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_model_metalog_proto_rawDescOnce sync.Once
	file_pkg_model_metalog_proto_rawDescData = file_pkg_model_metalog_proto_rawDesc
)

func file_pkg_model_metalog_proto_rawDescGZIP() []byte {
	file_pkg_model_metalog_proto_rawDescOnce.Do(func() {
		file_pkg_model_metalog_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_model_metalog_proto_rawDescData)
	})
	return file_pkg_model_metalog_proto_rawDescData
}

var file_pkg_model_metalog_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pkg_model_metalog_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_pkg_model_metalog_proto_goTypes = []interface{}{
	(MetaLog_PatternKey)(0),       // 0: model.MetaLog.PatternKey
	(*MetaLog)(nil),               // 1: model.MetaLog
	nil,                           // 2: model.MetaLog.LabelsEntry
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
	(LogLevel)(0),                 // 4: model.LogLevel
	(*ProcessError)(nil),          // 5: model.ProcessError
}
var file_pkg_model_metalog_proto_depIdxs = []int32{
	3, // 0: model.MetaLog.fallbackTimestamp:type_name -> google.protobuf.Timestamp
	4, // 1: model.MetaLog.fallbackLoglevel:type_name -> model.LogLevel
	0, // 2: model.MetaLog.patternKey:type_name -> model.MetaLog.PatternKey
	2, // 3: model.MetaLog.labels:type_name -> model.MetaLog.LabelsEntry
	5, // 4: model.MetaLog.processError:type_name -> model.ProcessError
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_pkg_model_metalog_proto_init() }
func file_pkg_model_metalog_proto_init() {
	if File_pkg_model_metalog_proto != nil {
		return
	}
	file_pkg_model_ecs_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_pkg_model_metalog_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetaLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_model_metalog_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_model_metalog_proto_goTypes,
		DependencyIndexes: file_pkg_model_metalog_proto_depIdxs,
		EnumInfos:         file_pkg_model_metalog_proto_enumTypes,
		MessageInfos:      file_pkg_model_metalog_proto_msgTypes,
	}.Build()
	File_pkg_model_metalog_proto = out.File
	file_pkg_model_metalog_proto_rawDesc = nil
	file_pkg_model_metalog_proto_goTypes = nil
	file_pkg_model_metalog_proto_depIdxs = nil
}
